// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.13.0
// source: lucy_proto/create.proto

package lucy

import (
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	cerealMessages "github.com/illuscio-dev/protoCereal-go/cerealMessages"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Job is a series of JobStage values that together make up a single pipeline of work
// to be sequentially executed.
type NewJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type is the human readable value that uniquely identifies this type of job for
	// workers to filter by.
	// @inject_tag: bson:"type"
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty" bson:"type"`
	// name is the human-readable name of the job.
	// @inject_tag: bson:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	// description is a human-readable description of the job stage.
	// @inject_tag: bson:"description"
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty" bson:"description"`
	// input contains all the settings and data necessary for workers to complete the job.
	// @inject_tag: bson:"input"
	Input *any.Any `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty" bson:"input"`
	// max_retries is the maximum number of times this job can be retried. If 0, no
	// retries are allowed. Unbounded retries are currently unsupported.
	// @inject_tag: bson:"max_retries"
	MaxRetries uint32 `protobuf:"varint,5,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty" bson:"max_retries"`
	// stages contains all the stages of the job.
	// @inject_tag: bson:"stages"
	Stages []*JobStage `protobuf:"bytes,6,rep,name=stages,proto3" json:"stages,omitempty" bson:"stages"`
}

func (x *NewJob) Reset() {
	*x = NewJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucy_proto_create_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewJob) ProtoMessage() {}

func (x *NewJob) ProtoReflect() protoreflect.Message {
	mi := &file_lucy_proto_create_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewJob.ProtoReflect.Descriptor instead.
func (*NewJob) Descriptor() ([]byte, []int) {
	return file_lucy_proto_create_proto_rawDescGZIP(), []int{0}
}

func (x *NewJob) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NewJob) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewJob) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NewJob) GetInput() *any.Any {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *NewJob) GetMaxRetries() uint32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *NewJob) GetStages() []*JobStage {
	if x != nil {
		return x.Stages
	}
	return nil
}

// NewJobs holds a list of new jobs to create in a batch.
type NewJobs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// batch is the id of the batch to add these jobs to.
	// @inject_tag: bson:"batch"
	Batch *cerealMessages.UUID `protobuf:"bytes,1,opt,name=batch,proto3" json:"batch,omitempty" bson:"batch"`
	// jobs is the list of new jobs to insert into the batch.
	Jobs []*NewJob `protobuf:"bytes,2,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *NewJobs) Reset() {
	*x = NewJobs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucy_proto_create_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewJobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewJobs) ProtoMessage() {}

func (x *NewJobs) ProtoReflect() protoreflect.Message {
	mi := &file_lucy_proto_create_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewJobs.ProtoReflect.Descriptor instead.
func (*NewJobs) Descriptor() ([]byte, []int) {
	return file_lucy_proto_create_proto_rawDescGZIP(), []int{1}
}

func (x *NewJobs) GetBatch() *cerealMessages.UUID {
	if x != nil {
		return x.Batch
	}
	return nil
}

func (x *NewJobs) GetJobs() []*NewJob {
	if x != nil {
		return x.Jobs
	}
	return nil
}

// CreatedJobs returns information about newly created jobs.
type CreatedJobs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ids is a list of job uuids in the same order as the new posted jobs.
	Ids []*cerealMessages.UUID `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *CreatedJobs) Reset() {
	*x = CreatedJobs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucy_proto_create_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatedJobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatedJobs) ProtoMessage() {}

func (x *CreatedJobs) ProtoReflect() protoreflect.Message {
	mi := &file_lucy_proto_create_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatedJobs.ProtoReflect.Descriptor instead.
func (*CreatedJobs) Descriptor() ([]byte, []int) {
	return file_lucy_proto_create_proto_rawDescGZIP(), []int{2}
}

func (x *CreatedJobs) GetIds() []*cerealMessages.UUID {
	if x != nil {
		return x.Ids
	}
	return nil
}

// Batch is a collection of Job values that are tied together as a collection of work.
// Jobs contained within a batch are safe to concurrently execute.
type NewBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type is the human readable value that uniquely identifies this type of job for
	// workers to filter by. All jobs added to this batch must match the type.
	// @inject_tag: bson:"type"
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty" bson:"type"`
	// name is the human-readable name of the batch.
	// @inject_tag: bson:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	// description is the human-readable description of the batch.
	// @inject_tag: bson:"description"
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty" bson:"description"`
	// jobs holds the jobs for the batch. More jobs can be added after-the-fact if
	// desired
	// @inject_tag: bson:"jobs"
	Jobs []*NewJob `protobuf:"bytes,4,rep,name=jobs,proto3" json:"jobs,omitempty" bson:"jobs"`
}

func (x *NewBatch) Reset() {
	*x = NewBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucy_proto_create_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBatch) ProtoMessage() {}

func (x *NewBatch) ProtoReflect() protoreflect.Message {
	mi := &file_lucy_proto_create_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBatch.ProtoReflect.Descriptor instead.
func (*NewBatch) Descriptor() ([]byte, []int) {
	return file_lucy_proto_create_proto_rawDescGZIP(), []int{3}
}

func (x *NewBatch) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NewBatch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewBatch) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NewBatch) GetJobs() []*NewJob {
	if x != nil {
		return x.Jobs
	}
	return nil
}

// CreatedBatch returns information about a newly created batch.
type CreatedBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// batch_id is the uuid of the newly created batch
	BatchId *cerealMessages.UUID `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	// job_ids are the job uuids of the newly crated jobs, in the same order they were
	// submitted.
	JobIds []*cerealMessages.UUID `protobuf:"bytes,2,rep,name=job_ids,json=jobIds,proto3" json:"job_ids,omitempty"`
}

func (x *CreatedBatch) Reset() {
	*x = CreatedBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucy_proto_create_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatedBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatedBatch) ProtoMessage() {}

func (x *CreatedBatch) ProtoReflect() protoreflect.Message {
	mi := &file_lucy_proto_create_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatedBatch.ProtoReflect.Descriptor instead.
func (*CreatedBatch) Descriptor() ([]byte, []int) {
	return file_lucy_proto_create_proto_rawDescGZIP(), []int{4}
}

func (x *CreatedBatch) GetBatchId() *cerealMessages.UUID {
	if x != nil {
		return x.BatchId
	}
	return nil
}

func (x *CreatedBatch) GetJobIds() []*cerealMessages.UUID {
	if x != nil {
		return x.JobIds
	}
	return nil
}

var File_lucy_proto_create_proto protoreflect.FileDescriptor

var file_lucy_proto_create_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6c, 0x75, 0x63, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6c, 0x75, 0x63, 0x79, 0x1a,
	0x17, 0x63, 0x65, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x75,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6c, 0x75, 0x63, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x01, 0x0a, 0x06, 0x4e,
	0x65, 0x77, 0x4a, 0x6f, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x61, 0x78, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c,
	0x75, 0x63, 0x79, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x4a, 0x6f, 0x62, 0x73, 0x12,
	0x22, 0x0a, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x63, 0x65, 0x72, 0x65, 0x61, 0x6c, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x05, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x20, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x75, 0x63, 0x79, 0x2e, 0x4e, 0x65, 0x77, 0x4a, 0x6f, 0x62, 0x52,
	0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0x2d, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x4a, 0x6f, 0x62, 0x73, 0x12, 0x1e, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x65, 0x72, 0x65, 0x61, 0x6c, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0x76, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x04, 0x6a, 0x6f,
	0x62, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x75, 0x63, 0x79, 0x2e,
	0x4e, 0x65, 0x77, 0x4a, 0x6f, 0x62, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0x5e, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x27, 0x0a, 0x08,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x63, 0x65, 0x72, 0x65, 0x61, 0x6c, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x07, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x65, 0x72, 0x65, 0x61, 0x6c, 0x2e,
	0x55, 0x55, 0x49, 0x44, 0x52, 0x06, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x42, 0x22, 0x5a, 0x20,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x61, 0x6b, 0x65,
	0x31, 0x30, 0x30, 0x2f, 0x6c, 0x75, 0x63, 0x79, 0x2d, 0x67, 0x6f, 0x2f, 0x6c, 0x75, 0x63, 0x79,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lucy_proto_create_proto_rawDescOnce sync.Once
	file_lucy_proto_create_proto_rawDescData = file_lucy_proto_create_proto_rawDesc
)

func file_lucy_proto_create_proto_rawDescGZIP() []byte {
	file_lucy_proto_create_proto_rawDescOnce.Do(func() {
		file_lucy_proto_create_proto_rawDescData = protoimpl.X.CompressGZIP(file_lucy_proto_create_proto_rawDescData)
	})
	return file_lucy_proto_create_proto_rawDescData
}

var file_lucy_proto_create_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_lucy_proto_create_proto_goTypes = []interface{}{
	(*NewJob)(nil),              // 0: lucy.NewJob
	(*NewJobs)(nil),             // 1: lucy.NewJobs
	(*CreatedJobs)(nil),         // 2: lucy.CreatedJobs
	(*NewBatch)(nil),            // 3: lucy.NewBatch
	(*CreatedBatch)(nil),        // 4: lucy.CreatedBatch
	(*any.Any)(nil),             // 5: google.protobuf.Any
	(*JobStage)(nil),            // 6: lucy.JobStage
	(*cerealMessages.UUID)(nil), // 7: cereal.UUID
}
var file_lucy_proto_create_proto_depIdxs = []int32{
	5, // 0: lucy.NewJob.input:type_name -> google.protobuf.Any
	6, // 1: lucy.NewJob.stages:type_name -> lucy.JobStage
	7, // 2: lucy.NewJobs.batch:type_name -> cereal.UUID
	0, // 3: lucy.NewJobs.jobs:type_name -> lucy.NewJob
	7, // 4: lucy.CreatedJobs.ids:type_name -> cereal.UUID
	0, // 5: lucy.NewBatch.jobs:type_name -> lucy.NewJob
	7, // 6: lucy.CreatedBatch.batch_id:type_name -> cereal.UUID
	7, // 7: lucy.CreatedBatch.job_ids:type_name -> cereal.UUID
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_lucy_proto_create_proto_init() }
func file_lucy_proto_create_proto_init() {
	if File_lucy_proto_create_proto != nil {
		return
	}
	file_lucy_proto_jobs_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_lucy_proto_create_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lucy_proto_create_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewJobs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lucy_proto_create_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatedJobs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lucy_proto_create_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lucy_proto_create_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatedBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lucy_proto_create_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lucy_proto_create_proto_goTypes,
		DependencyIndexes: file_lucy_proto_create_proto_depIdxs,
		MessageInfos:      file_lucy_proto_create_proto_msgTypes,
	}.Build()
	File_lucy_proto_create_proto = out.File
	file_lucy_proto_create_proto_rawDesc = nil
	file_lucy_proto_create_proto_goTypes = nil
	file_lucy_proto_create_proto_depIdxs = nil
}
