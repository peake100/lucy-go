// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.13.0
// source: lucy_proto/updates.proto

package lucy

import (
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	_ "github.com/golang/protobuf/ptypes/empty"
	cerealMessages "github.com/illuscio-dev/protoCereal-go/cerealMessages"
	protogen "github.com/peake100/gRPEAKEC-go/pkerr/protogen"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// StageID identifies the job stage an update is for.
type StageID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the job this update is for
	JobId *cerealMessages.UUID `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// stage_index this update is for
	StageIndex int32 `protobuf:"varint,2,opt,name=stage_index,json=stageIndex,proto3" json:"stage_index,omitempty"`
}

func (x *StageID) Reset() {
	*x = StageID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucy_proto_updates_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageID) ProtoMessage() {}

func (x *StageID) ProtoReflect() protoreflect.Message {
	mi := &file_lucy_proto_updates_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageID.ProtoReflect.Descriptor instead.
func (*StageID) Descriptor() ([]byte, []int) {
	return file_lucy_proto_updates_proto_rawDescGZIP(), []int{0}
}

func (x *StageID) GetJobId() *cerealMessages.UUID {
	if x != nil {
		return x.JobId
	}
	return nil
}

func (x *StageID) GetStageIndex() int32 {
	if x != nil {
		return x.StageIndex
	}
	return 0
}

type StartStageUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// run_by is the name of the worker who ran this JobStage.
	// @inject_tag: bson:"run_by"
	RunBy string `protobuf:"bytes,2,opt,name=run_by,json=runBy,proto3" json:"run_by,omitempty" bson:"run_by"`
}

func (x *StartStageUpdate) Reset() {
	*x = StartStageUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucy_proto_updates_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartStageUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartStageUpdate) ProtoMessage() {}

func (x *StartStageUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lucy_proto_updates_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartStageUpdate.ProtoReflect.Descriptor instead.
func (*StartStageUpdate) Descriptor() ([]byte, []int) {
	return file_lucy_proto_updates_proto_rawDescGZIP(), []int{1}
}

func (x *StartStageUpdate) GetRunBy() string {
	if x != nil {
		return x.RunBy
	}
	return ""
}

// StartStage holds information about a starting stage.
type StartStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// stage_id is the stage identifier of the job stage to start.
	StageId *StageID `protobuf:"bytes,1,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	// run_by is the name of the worker who ran this JobStage.
	// @inject_tag: bson:"run_by"
	Update *StartStageUpdate `protobuf:"bytes,2,opt,name=update,proto3" json:"update,omitempty" bson:"run_by"`
}

func (x *StartStage) Reset() {
	*x = StartStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucy_proto_updates_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartStage) ProtoMessage() {}

func (x *StartStage) ProtoReflect() protoreflect.Message {
	mi := &file_lucy_proto_updates_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartStage.ProtoReflect.Descriptor instead.
func (*StartStage) Descriptor() ([]byte, []int) {
	return file_lucy_proto_updates_proto_rawDescGZIP(), []int{2}
}

func (x *StartStage) GetStageId() *StageID {
	if x != nil {
		return x.StageId
	}
	return nil
}

func (x *StartStage) GetUpdate() *StartStageUpdate {
	if x != nil {
		return x.Update
	}
	return nil
}

// ProgressStageInfo holds information about a stage's progress.
type ProgressStageUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// progress is the new progress value.
	// @inject_tag: bson:"progress"
	Progress float32 `protobuf:"fixed32,1,opt,name=progress,proto3" json:"progress,omitempty" bson:"progress"`
}

func (x *ProgressStageUpdate) Reset() {
	*x = ProgressStageUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucy_proto_updates_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressStageUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressStageUpdate) ProtoMessage() {}

func (x *ProgressStageUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lucy_proto_updates_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressStageUpdate.ProtoReflect.Descriptor instead.
func (*ProgressStageUpdate) Descriptor() ([]byte, []int) {
	return file_lucy_proto_updates_proto_rawDescGZIP(), []int{3}
}

func (x *ProgressStageUpdate) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

// ProgressStage holds information about a stage's progress.
type ProgressStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// stage_id is the stage identifier of the job stage to start.
	StageId *StageID `protobuf:"bytes,1,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	// progress is the progress update for this stage.
	Update *ProgressStageUpdate `protobuf:"bytes,2,opt,name=update,proto3" json:"update,omitempty"`
}

func (x *ProgressStage) Reset() {
	*x = ProgressStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucy_proto_updates_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressStage) ProtoMessage() {}

func (x *ProgressStage) ProtoReflect() protoreflect.Message {
	mi := &file_lucy_proto_updates_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressStage.ProtoReflect.Descriptor instead.
func (*ProgressStage) Descriptor() ([]byte, []int) {
	return file_lucy_proto_updates_proto_rawDescGZIP(), []int{4}
}

func (x *ProgressStage) GetStageId() *StageID {
	if x != nil {
		return x.StageId
	}
	return nil
}

func (x *ProgressStage) GetUpdate() *ProgressStageUpdate {
	if x != nil {
		return x.Update
	}
	return nil
}

// CompleteStageInfo holds information about the result of a stage run.
type CompleteStageUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// error contains error information about the job stage.
	// @inject_tag: bson:"error"
	Error *protogen.Error `protobuf:"bytes,9,opt,name=error,proto3" json:"error,omitempty" bson:"error"`
	// result_data contains job completion data from the worker.
	// @inject_tag: bson:"result_data"
	ResultData *any.Any `protobuf:"bytes,10,opt,name=result_data,json=resultData,proto3" json:"result_data,omitempty" bson:"result_data"`
}

func (x *CompleteStageUpdate) Reset() {
	*x = CompleteStageUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucy_proto_updates_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteStageUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteStageUpdate) ProtoMessage() {}

func (x *CompleteStageUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lucy_proto_updates_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteStageUpdate.ProtoReflect.Descriptor instead.
func (*CompleteStageUpdate) Descriptor() ([]byte, []int) {
	return file_lucy_proto_updates_proto_rawDescGZIP(), []int{5}
}

func (x *CompleteStageUpdate) GetError() *protogen.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CompleteStageUpdate) GetResultData() *any.Any {
	if x != nil {
		return x.ResultData
	}
	return nil
}

// CompleteStage holds result information about a stage run.
type CompleteStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// stage_id is the stage identifier of the job stage to start.
	StageId *StageID `protobuf:"bytes,1,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	// result is the result data of the stage.
	Update *CompleteStageUpdate `protobuf:"bytes,2,opt,name=update,proto3" json:"update,omitempty"`
}

func (x *CompleteStage) Reset() {
	*x = CompleteStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucy_proto_updates_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteStage) ProtoMessage() {}

func (x *CompleteStage) ProtoReflect() protoreflect.Message {
	mi := &file_lucy_proto_updates_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteStage.ProtoReflect.Descriptor instead.
func (*CompleteStage) Descriptor() ([]byte, []int) {
	return file_lucy_proto_updates_proto_rawDescGZIP(), []int{6}
}

func (x *CompleteStage) GetStageId() *StageID {
	if x != nil {
		return x.StageId
	}
	return nil
}

func (x *CompleteStage) GetUpdate() *CompleteStageUpdate {
	if x != nil {
		return x.Update
	}
	return nil
}

// WorkerUpdate is a generic update that can be used for streaming updates quickly to
// the server.
type RunnerUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// stage_id is the stage identifier of the job stage update. If blank, the last sent
	// stage_id will be used. This field MUST be set on the first message to a
	// WorkerUpdates stream.
	StageId *StageID `protobuf:"bytes,1,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	// update is the update to apply.
	//
	// Types that are assignable to Update:
	//	*RunnerUpdate_Start
	//	*RunnerUpdate_Progress
	//	*RunnerUpdate_Complete
	Update isRunnerUpdate_Update `protobuf_oneof:"update"`
	// confirm prompts the server to return an empty message. If received without error,
	// all previously sent requests have been processed.
	Confirm bool `protobuf:"varint,5,opt,name=confirm,proto3" json:"confirm,omitempty"`
}

func (x *RunnerUpdate) Reset() {
	*x = RunnerUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucy_proto_updates_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerUpdate) ProtoMessage() {}

func (x *RunnerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lucy_proto_updates_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerUpdate.ProtoReflect.Descriptor instead.
func (*RunnerUpdate) Descriptor() ([]byte, []int) {
	return file_lucy_proto_updates_proto_rawDescGZIP(), []int{7}
}

func (x *RunnerUpdate) GetStageId() *StageID {
	if x != nil {
		return x.StageId
	}
	return nil
}

func (m *RunnerUpdate) GetUpdate() isRunnerUpdate_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (x *RunnerUpdate) GetStart() *StartStageUpdate {
	if x, ok := x.GetUpdate().(*RunnerUpdate_Start); ok {
		return x.Start
	}
	return nil
}

func (x *RunnerUpdate) GetProgress() *ProgressStageUpdate {
	if x, ok := x.GetUpdate().(*RunnerUpdate_Progress); ok {
		return x.Progress
	}
	return nil
}

func (x *RunnerUpdate) GetComplete() *CompleteStageUpdate {
	if x, ok := x.GetUpdate().(*RunnerUpdate_Complete); ok {
		return x.Complete
	}
	return nil
}

func (x *RunnerUpdate) GetConfirm() bool {
	if x != nil {
		return x.Confirm
	}
	return false
}

type isRunnerUpdate_Update interface {
	isRunnerUpdate_Update()
}

type RunnerUpdate_Start struct {
	// start starts a stage.
	Start *StartStageUpdate `protobuf:"bytes,2,opt,name=start,proto3,oneof"`
}

type RunnerUpdate_Progress struct {
	// progress progresses a stage.
	Progress *ProgressStageUpdate `protobuf:"bytes,3,opt,name=progress,proto3,oneof"`
}

type RunnerUpdate_Complete struct {
	// complete sets the result of a stage once it is done.
	Complete *CompleteStageUpdate `protobuf:"bytes,4,opt,name=complete,proto3,oneof"`
}

func (*RunnerUpdate_Start) isRunnerUpdate_Update() {}

func (*RunnerUpdate_Progress) isRunnerUpdate_Update() {}

func (*RunnerUpdate_Complete) isRunnerUpdate_Update() {}

// RunnerErrorDetails is set in the details of an pkerr.Error that occurs while
// streaming RunnerUpdate values.
type RunnerErrorDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UpdateNum is the number of the update that caused the error. When a Runner stream
	// is opened, the server tracks all requests, in order, that come in starting at 0.
	UpdateNum uint64 `protobuf:"varint,1,opt,name=UpdateNum,proto3" json:"UpdateNum,omitempty"`
}

func (x *RunnerErrorDetails) Reset() {
	*x = RunnerErrorDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucy_proto_updates_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunnerErrorDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerErrorDetails) ProtoMessage() {}

func (x *RunnerErrorDetails) ProtoReflect() protoreflect.Message {
	mi := &file_lucy_proto_updates_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerErrorDetails.ProtoReflect.Descriptor instead.
func (*RunnerErrorDetails) Descriptor() ([]byte, []int) {
	return file_lucy_proto_updates_proto_rawDescGZIP(), []int{8}
}

func (x *RunnerErrorDetails) GetUpdateNum() uint64 {
	if x != nil {
		return x.UpdateNum
	}
	return 0
}

// CancelJobs passes a series of job ids to cancel.
type CancelJobs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobIds []*cerealMessages.UUID `protobuf:"bytes,1,rep,name=job_ids,json=jobIds,proto3" json:"job_ids,omitempty"`
}

func (x *CancelJobs) Reset() {
	*x = CancelJobs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucy_proto_updates_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelJobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobs) ProtoMessage() {}

func (x *CancelJobs) ProtoReflect() protoreflect.Message {
	mi := &file_lucy_proto_updates_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobs.ProtoReflect.Descriptor instead.
func (*CancelJobs) Descriptor() ([]byte, []int) {
	return file_lucy_proto_updates_proto_rawDescGZIP(), []int{9}
}

func (x *CancelJobs) GetJobIds() []*cerealMessages.UUID {
	if x != nil {
		return x.JobIds
	}
	return nil
}

// CancelBatches passes a series of batch ids to cancel.
type CancelBatches struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchIds []*cerealMessages.UUID `protobuf:"bytes,1,rep,name=batch_ids,json=batchIds,proto3" json:"batch_ids,omitempty"`
}

func (x *CancelBatches) Reset() {
	*x = CancelBatches{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lucy_proto_updates_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelBatches) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelBatches) ProtoMessage() {}

func (x *CancelBatches) ProtoReflect() protoreflect.Message {
	mi := &file_lucy_proto_updates_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelBatches.ProtoReflect.Descriptor instead.
func (*CancelBatches) Descriptor() ([]byte, []int) {
	return file_lucy_proto_updates_proto_rawDescGZIP(), []int{10}
}

func (x *CancelBatches) GetBatchIds() []*cerealMessages.UUID {
	if x != nil {
		return x.BatchIds
	}
	return nil
}

var File_lucy_proto_updates_proto protoreflect.FileDescriptor

var file_lucy_proto_updates_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6c, 0x75, 0x63, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6c, 0x75, 0x63, 0x79,
	0x1a, 0x17, 0x63, 0x65, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75,
	0x75, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x67, 0x72, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x70, 0x6b, 0x65, 0x72, 0x72, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x23,
	0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x63, 0x65, 0x72, 0x65, 0x61, 0x6c, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x29, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f,
	0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x42, 0x79, 0x22,
	0x66, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x6c, 0x75, 0x63, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x44, 0x52, 0x07,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x75, 0x63, 0x79, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x31, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x6c, 0x0a, 0x0d, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6c, 0x75, 0x63, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x44, 0x52, 0x07, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x75, 0x63, 0x79, 0x2e, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x70, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x22, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x6b, 0x65, 0x72, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x6c, 0x0a, 0x0d, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6c, 0x75, 0x63, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x44, 0x52, 0x07, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x75, 0x63, 0x79, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0xfe, 0x01, 0x0a, 0x0c, 0x52, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x75,
	0x63, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x44, 0x52, 0x07, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x75, 0x63, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x75, 0x63, 0x79, 0x2e, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x08,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6c, 0x75, 0x63, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x42,
	0x08, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x32, 0x0a, 0x12, 0x52, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x33, 0x0a,
	0x0a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x25, 0x0a, 0x07, 0x6a,
	0x6f, 0x62, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x65, 0x72, 0x65, 0x61, 0x6c, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x06, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x73, 0x22, 0x3a, 0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x65, 0x72, 0x65, 0x61, 0x6c, 0x2e,
	0x55, 0x55, 0x49, 0x44, 0x52, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x73, 0x42, 0x22,
	0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x61,
	0x6b, 0x65, 0x31, 0x30, 0x30, 0x2f, 0x6c, 0x75, 0x63, 0x79, 0x2d, 0x67, 0x6f, 0x2f, 0x6c, 0x75,
	0x63, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lucy_proto_updates_proto_rawDescOnce sync.Once
	file_lucy_proto_updates_proto_rawDescData = file_lucy_proto_updates_proto_rawDesc
)

func file_lucy_proto_updates_proto_rawDescGZIP() []byte {
	file_lucy_proto_updates_proto_rawDescOnce.Do(func() {
		file_lucy_proto_updates_proto_rawDescData = protoimpl.X.CompressGZIP(file_lucy_proto_updates_proto_rawDescData)
	})
	return file_lucy_proto_updates_proto_rawDescData
}

var file_lucy_proto_updates_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_lucy_proto_updates_proto_goTypes = []interface{}{
	(*StageID)(nil),             // 0: lucy.StageID
	(*StartStageUpdate)(nil),    // 1: lucy.StartStageUpdate
	(*StartStage)(nil),          // 2: lucy.StartStage
	(*ProgressStageUpdate)(nil), // 3: lucy.ProgressStageUpdate
	(*ProgressStage)(nil),       // 4: lucy.ProgressStage
	(*CompleteStageUpdate)(nil), // 5: lucy.CompleteStageUpdate
	(*CompleteStage)(nil),       // 6: lucy.CompleteStage
	(*RunnerUpdate)(nil),        // 7: lucy.RunnerUpdate
	(*RunnerErrorDetails)(nil),  // 8: lucy.RunnerErrorDetails
	(*CancelJobs)(nil),          // 9: lucy.CancelJobs
	(*CancelBatches)(nil),       // 10: lucy.CancelBatches
	(*cerealMessages.UUID)(nil), // 11: cereal.UUID
	(*protogen.Error)(nil),      // 12: pkerr.Error
	(*any.Any)(nil),             // 13: google.protobuf.Any
}
var file_lucy_proto_updates_proto_depIdxs = []int32{
	11, // 0: lucy.StageID.job_id:type_name -> cereal.UUID
	0,  // 1: lucy.StartStage.stage_id:type_name -> lucy.StageID
	1,  // 2: lucy.StartStage.update:type_name -> lucy.StartStageUpdate
	0,  // 3: lucy.ProgressStage.stage_id:type_name -> lucy.StageID
	3,  // 4: lucy.ProgressStage.update:type_name -> lucy.ProgressStageUpdate
	12, // 5: lucy.CompleteStageUpdate.error:type_name -> pkerr.Error
	13, // 6: lucy.CompleteStageUpdate.result_data:type_name -> google.protobuf.Any
	0,  // 7: lucy.CompleteStage.stage_id:type_name -> lucy.StageID
	5,  // 8: lucy.CompleteStage.update:type_name -> lucy.CompleteStageUpdate
	0,  // 9: lucy.RunnerUpdate.stage_id:type_name -> lucy.StageID
	1,  // 10: lucy.RunnerUpdate.start:type_name -> lucy.StartStageUpdate
	3,  // 11: lucy.RunnerUpdate.progress:type_name -> lucy.ProgressStageUpdate
	5,  // 12: lucy.RunnerUpdate.complete:type_name -> lucy.CompleteStageUpdate
	11, // 13: lucy.CancelJobs.job_ids:type_name -> cereal.UUID
	11, // 14: lucy.CancelBatches.batch_ids:type_name -> cereal.UUID
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_lucy_proto_updates_proto_init() }
func file_lucy_proto_updates_proto_init() {
	if File_lucy_proto_updates_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lucy_proto_updates_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lucy_proto_updates_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartStageUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lucy_proto_updates_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lucy_proto_updates_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgressStageUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lucy_proto_updates_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgressStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lucy_proto_updates_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteStageUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lucy_proto_updates_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lucy_proto_updates_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lucy_proto_updates_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunnerErrorDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lucy_proto_updates_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelJobs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lucy_proto_updates_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelBatches); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_lucy_proto_updates_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*RunnerUpdate_Start)(nil),
		(*RunnerUpdate_Progress)(nil),
		(*RunnerUpdate_Complete)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lucy_proto_updates_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lucy_proto_updates_proto_goTypes,
		DependencyIndexes: file_lucy_proto_updates_proto_depIdxs,
		MessageInfos:      file_lucy_proto_updates_proto_msgTypes,
	}.Build()
	File_lucy_proto_updates_proto = out.File
	file_lucy_proto_updates_proto_rawDesc = nil
	file_lucy_proto_updates_proto_goTypes = nil
	file_lucy_proto_updates_proto_depIdxs = nil
}
